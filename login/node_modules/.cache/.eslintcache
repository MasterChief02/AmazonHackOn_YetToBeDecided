[{"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/index.js":"1","/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/App.js":"2","/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/reportWebVitals.js":"3","/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/components/LoginForm.js":"4","/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/components/PaymentPortal/PaymentPortal.js":"5"},{"size":539,"mtime":1659041504149,"results":"6","hashOfConfig":"7"},{"size":3111,"mtime":1659043627841,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1659036215925,"results":"9","hashOfConfig":"7"},{"size":1242,"mtime":1659036215925,"results":"10","hashOfConfig":"7"},{"size":3406,"mtime":1659044582702,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rh8o5x",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/index.js",[],[],"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/App.js",["29","30","31","32","33","34","35","36","37"],[],"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/reportWebVitals.js",[],[],[],"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/components/LoginForm.js",[],[],"/mnt/ntfs/Projects/Hackathon/AmazonHackOn_YetToBeDecided/login/src/components/PaymentPortal/PaymentPortal.js",["38","39","40","41"],[],"import React, {useState} from 'react'\nimport styled from 'styled-components'\n\nfunction PaymentPortal() {\n    // Variables\n    const [details,setDetails]=useState({card_number:\"\",expiry_month:\"\", name:\"\", cvv:\"\"});\n    const [showInvalid, setShowInvalid] = useState(false);\n    const [showUserBlocked, setShowUserBlocked] = useState(false);\n    const [paymentComplete, setPaymentComplete] = useState(false);\n    const submitHandler = e =>{\n        e.preventDefault();\n        // Login(details);\n    }\n\n    // Functions\n    const payHandler = () => {\n        const requestOptions = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              _card_number: details.card_number,\n              _expiry_month: details.expiry_month,\n              _name: details.name,\n              _cvv: details.cvv\n            }),\n          };\n          fetch(\"http://localhost:4000/\", requestOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json.response);\n                if (json.response==10) {\n                setShowInvalid(true);\n                setShowUserBlocked(false);\n                } else if (json.response==20) {\n                setShowInvalid(false);\n                setShowUserBlocked(true);\n                } else {\n                setPaymentComplete(true);\n                }\n            });\n    }\n\n    // UI Designs\n    const Form = styled.div`\n        border: black sold 2px;\n        background-color:rgba(0,0,0,0.3);\n    `\n    const InvalidMessage = styled.div`\n        color: #FFCE00\n    `\n    const UserBlocked = styled.div`\n        color: #FE4880\n    `\n    const FormEntry  = styled.div`\n        label {\n            display: block;\n        }\n        input {\n\n        }\n    `\n    const PayButton = styled.button``\n    const CancelButton = styled.button``\n\n\n  return (\n    <Form>\n        {(showInvalid) ?\n        <>\n            <InvalidMessage>\n                Details do not match\n            </InvalidMessage>\n        </>:<>\n        </>}\n        {(showUserBlocked) ?\n        <>\n            <UserBlocked>\n                This card is blocked due to suspicious activities.\n                Please check your e-mail for further details.\n            </UserBlocked>\n        </>:<>\n        </>}\n        <FormEntry>\n            <label> Card Number </label>\n            <input type=\"number\" name=\"card_number\" id=\"card_number\" onChange={e => setDetails({...details,card_number:e.target.value})} value={details.card_number}/>\n        </FormEntry>\n        <FormEntry>\n            <label> Expiry Date </label>\n            <input type=\"month\" name=\"expiry_month\" id=\"expiry_month\" onChange={e => setDetails({...details,expiry_month:e.target.value})} value={details.expiry_month}/>\n        </FormEntry>\n        <FormEntry>\n            <label> Full Name </label>\n            <input type=\"text\" name=\"name\" id=\"name\" onChange={e => setDetails({...details,name:e.target.value})} value={details.name}/>\n        </FormEntry>\n        <FormEntry>\n            <label> CVV </label>\n            <input type=\"number\" name=\"cvv\" id=\"cvv\" onChange={e => setDetails({...details,cvv:e.target.value})} value={details.cvv}/>\n        </FormEntry>\n        <PayButton onClick={payHandler} >Pay Now</PayButton>\n        <CancelButton>Cancel</CancelButton>\n    </Form>\n  )\n}\n\nexport default PaymentPortal",{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":33,"column":15,"nodeType":"48","messageId":"49","endLine":33,"endColumn":26},{"ruleId":"42","severity":1,"message":"50","line":70,"column":10,"nodeType":"44","messageId":"45","endLine":70,"endColumn":11},{"ruleId":"42","severity":1,"message":"51","line":70,"column":12,"nodeType":"44","messageId":"45","endLine":70,"endColumn":13},{"ruleId":"42","severity":1,"message":"52","line":70,"column":14,"nodeType":"44","messageId":"45","endLine":70,"endColumn":23},{"ruleId":"42","severity":1,"message":"53","line":70,"column":24,"nodeType":"44","messageId":"45","endLine":70,"endColumn":33},{"ruleId":"42","severity":1,"message":"54","line":70,"column":34,"nodeType":"44","messageId":"45","endLine":70,"endColumn":43},{"ruleId":"42","severity":1,"message":"55","line":79,"column":10,"nodeType":"44","messageId":"45","endLine":79,"endColumn":15},{"ruleId":"42","severity":1,"message":"56","line":80,"column":9,"nodeType":"44","messageId":"45","endLine":80,"endColumn":14},{"ruleId":"42","severity":1,"message":"57","line":9,"column":12,"nodeType":"44","messageId":"45","endLine":9,"endColumn":27},{"ruleId":"42","severity":1,"message":"58","line":10,"column":11,"nodeType":"44","messageId":"45","endLine":10,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":31,"column":34,"nodeType":"61","messageId":"62","endLine":31,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":34,"column":41,"nodeType":"61","messageId":"62","endLine":34,"endColumn":43},"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'movementX' is assigned a value but never used.","'movementY' is assigned a value but never used.","'timestamp' is assigned a value but never used.","'error' is assigned a value but never used.","'Login' is assigned a value but never used.","'paymentComplete' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]